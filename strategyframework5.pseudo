// var param
var  MinSecCorellLong   // 0.89
var  MinSecCorellShort // -0.89
var  SecCorellLengh // 5D

// ======= only highly corellated insight can paricipate, otherwise, they are not in the If-Else ======= //

// var aa= engind > 0 ( 7 hours)
///var aaa= engind techinsightalert alert (5 hours)

//inflation
var inflation

//ppi, etc. ( corell ?)

// accumelate program, short term program, long term program


//STRATEGY RULES
LIMIT trade
NUMMBER OF TRADES
VAR INCLUDE POST MARKET = true

var wg //w graph
var dg //d graph

var TechInshightUpTime
//=======
As your alert in your strategy script is always triggered by some condition,
you can create some var variable, and store time where this alert condition was true.

var int alert_last_trigger_time = na

if alert_condition 
    alert( .....)
    alert_last_trigger_time := time

duration = time - alert_last_trigger_time

And then you can check if is your duration < than 8 hours to enter in position

// 

var SecurityUpTime
var SecurityDownTime
var TradeBetween


var EtfDailyLong //for long short daily
var EtfIndDailyLong
var EtfIndDailyShort
var EtfDailyShort


//ext input

rig count
sir
options
beta
gamma
eia p/c
eia istirical

game plan: wti 63 to 75
inflatio adjust

// inputs
EtfLong // Default: ERX
EtfShort // Default: ERY
Commodety1 // Default
Commodety2 // Default
Fut1 // Default
Fut2 // Default
Volutility1 // Default: vxxle
Volutility2 // Default: ovx
Ind1 // Default: xle
Ind2 // Default: djcien
Ind3 // Default: djuscl
SecurityLongSync1 // Default: BP
SecurityLongSync2
SecurityShortSync1
SecurityShortSync2
MimicEtfLong1 //Default: "dig"
MimicEtfLong2
MimicEtfShort1 ////Default: "dug"
MimicEtfSjort2
MimicEtfLOngReg //Default: frak


// ETF OF FUT
VAR EtfFut //sco , maybe vs other etf
//ratio

erx/ery (EtfLong/EtfShort)

erx/ovx
erx/vxxle
ery/ovx
ery/vxxle

//one two from graph (*** var dg daily graph )
xle vs vxxle - rank1
erx vs ery - rank7



// insights list
//insights rank 

7 (??? zgraph, rvgi, one two graph daily )

*RENKO, RENKO STRATEGY
**JUMBO TRADE, emplied volatility, erx goes ery daily
***JUMBO RED GREEN, BJ TSI, SUPPLY DE, FVG TREND, LOGISTIC, LOGISTIC diff, IIOT, RSI_LB

//financial var

// ======= TSIreg ======= //

TsiRegr=input(25, title="Momentum Smoothing 1")
TsiRegs=input(13, title="Momentum Smoothing 2")
src=close
TsiRegm=src-src[1]
TsiRegInsight=100*(ema(ema(TsiRegm,TsiRegr),TsiRegs)/ema(ema(abs(TsiRegm), TsiRegr),TsiRegs))

// ======= Vortex ======= //
study(title = "Vortex Indicator", shorttitle="VI", format=format.price, precision=4, resolution="")
period_ = input(14, title="Length", minval=2)
VMP = sum( abs( high - low[1]), period_ )
VMM = sum( abs( low - high[1]), period_ )
STR = sum( atr(1), period_ )
VIP = VMP / STR
VIM = VMM / STR
plot(VIP, title="VI +", color=#3BB3E4)
plot(VIM, title="VI -", color=#FF006E)


//Insight conditions, logic

// each is a variable

a = "erx" up -25
b = "erx" up 0
c = "erx" up 25


var TsiRegInBuyLong1 // (TsiRegInsight == "erx" up -25 or up 0 or up 25) AND (TSIreg == "ery" down -25 or down 0 or down 25)
var TsiRegInBuyShort1 // (TsiRegInsight == "ery" up -25 or up 0 or up 25) AND (TSIreg == "erx" down -25 or down 0 or down 25)


// Insights of Inpts

******* ATR vxxle  

// securities/inputs/param conditions

var EtfLongUp //etf long is up
var EtfLongDown
var EtfShortUp
var EtfShortDown
var Commodety1Up
var Commodety1Down

ATR vxxle > [-1]

alertcondition(close > open, title='Alert on Green Bar', message='Green Bar!')


ma = sma(close, 14)
xUp = crossover(close, ma)
if xUp
    // Trigger the alert the first time a cross occurs during the real-time bar.
    alert("Price (" + tostring(close) + ") crossed over MA (" + tostring(ma) +  ").", alert.freq_once_per_bar)
plot(ma)
plotchar(xUp, "xUp", "â–²", location.top, size = size.tiny)



//conditions, before trade


// ======= only highly corellated insight can paricipate, otherwise, they are not in the If-Else ======= //
// example: cl1! with erx/ery
// example: wti with erx/ery

/////

// Only plot the instrument's volume during
// Sunday's and Monday's sessions
newWeek = (dayofweek == sunday) or (dayofweek == monday)


///

// The iff() function requires three arguments and has the following syntax (Pine Script Language Tutorial, n.d.):

// iff(condition, result1, result2)

// The iff() function returns a value that depends on
// its condition: when the condition evaluates to true, result1 is returned; otherwise, result2 is returned


// /////

// few iff:
// https://kodify.net/tradingview/operators/iff-function/
// The iff() function can also be nested in order to evaluate several conditions


/////


// STEP 1:
// Make input options that configure backtest date range
startDate = input(title="Start Date", type=input.integer,
     defval=1, minval=1, maxval=31)
startMonth = input(title="Start Month", type=input.integer,
     defval=1, minval=1, maxval=12)
startYear = input(title="Start Year", type=input.integer,
     defval=2019, minval=1800, maxval=2100)

endDate = input(title="End Date", type=input.integer,
     defval=1, minval=1, maxval=31)
endMonth = input(title="End Month", type=input.integer,
     defval=7, minval=1, maxval=12)
endYear = input(title="End Year", type=input.integer,
     defval=2025, minval=1800, maxval=2100)

// STEP 2:
// Look if the close time of the current bar
// falls inside the date range
inDateRange = (time >= timestamp(syminfo.timezone, startYear,
         startMonth, startDate, 0, 0)) and
     (time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0))

// Calculate strategy values
emaValue = ema(close, 20)

plot(series=emaValue, color=color.teal, linewidth=2)

// Set trade entry conditions
enterLong  = (close > close[1]) and crossover(close, emaValue)
enterShort = (close < close[1]) and crossunder(close, emaValue)

// STEP 3:
// Submit entry orders, but only when bar is inside date range
if (inDateRange and enterLong)
    strategy.entry(id="EL", long=true)

if (inDateRange and enterShort)
    strategy.entry(id="ES", long=false)

// STEP 4:
// Exit open market position when date range ends
if (not inDateRange)
    strategy.close_all()


    /////// change indicator with plot no title
    p0 = plot(plt, title="RVI", style=plot.style_histogram, color=col, linewidth=3, transp=0)

    // EARNUINGS OF OIL STOCKS