//functions
//arrays
//erorrcode
//orders
//buy/sell
//amount
//begin hours
//cubes
//weekly



///////

RENKO, RENKO STRATEGY
JUMBO TRADE, VORTEX
JUMBO RED GREEN, BJ TSI, SUPPLY DE, EVG TREND, LOGISTIC, IIOT, RSI_LB
*** VISIBILITY W,D ALL
SCRIPTS GUTHUB
STRATEGY On BOARD, 1.2.3
ALL OTHER BOARDS
GOLD ETF, GOLD USD, GOLD BIT
e2 ibkr


////

***** jumbo, cmf ( best trades), renko red/green, comodety, fut: very important

******* commitment: https://www.barchart.com/futures/quotes/CLU21/technical-chart?plot=LINE&volume=total&data=WN&density=X&pricesOn=1&asPctChange=1&logscale=0&indicators=COTLC;COTDLC;MI;ACCUM&sym=CLU21&grid=1&height=500&studyheight=100
******* https://www.barchart.com/futures/quotes/CL*0/technical-chart?plot=CANDLE&volume=total&data=DO&density=M&pricesOn=1&asPctChange=1&logscale=0&indicators=COTLC;COTDLC&sym=CL*0&grid=1&height=500&studyheight=100
*****WTI crude oil (CLU21) this morning is down -0.45 (-0.62%), and September RBOB gasoline (RBU21) is down -0.0015 (-0.07%).  August Nymex natural gas (NGQ21) is down -0.008 (-0.20%)
*****weaker dollar
***NOAA forecast milder weather
*******global economic data today was bearish for energy demand and crude prices after the  German Jul IFO business climate unexpectedly fell -0.9 to 100.8, weaker than expectations of an increase to 102.5.  Also, the  Japan Jul Jibun Bank manufacturing PMI fell -0.2 to 52.2.  In addition, the Japan Jul Jibun Bank services PMI fell -1.6 to a 5-month low of 46.4.
***** energy demand and crude prices after Goldman Sachs today cut its U.S. Q3 GDP forecast to 8.5% from 9.5%, citing lower consumption growth
*******Vortexa today said that crude oil stored on tankers that have been stationary for at least seven days in the week ended July 23 fell -9.8% w/w to 86.44 million bbl
***** weekly EIA report showed that (1) U.S. crude oil inventories as of July 16 were -6.8% below the seasonal 5-year average, (2) gasoline inventories were -0.2% below the 5-year average, and (3) distillate inventories were -4.5% below the 5-year average.  U.S. crude oil production in the week ended July 16 was unchanged w/w at a 14-month high of 11.4 million bpd and is down by -1.7 million bpd (-13.0%) from the Feb-2020 record-high of 13.1 million bpd.

*******Baker Hughes reported last Friday that active U.S. oil rigs in the week ended July 23 rose by +7 rigs to a new 1-1/4 year high of 387 rigs.  U.S. active oil rigs have risen sharply from last August's 15-year low of 172 rigs, signaling increased U.S. crude oil production.

*******https://www.barchart.com/story/news/2117660/crude-oil-moves-lower-on-energy-demand-concerns

**xle/vxxle , erx/ery junc 
*** optional: snp, ndx, dow
**optional:esg products
**optional:ethanol, 
*****order/exit , through steps $, $$ 
*****trade two hours, trade two days

***https://kodify.net/tradingview/orders/strategy-entry/
//
*** ***opec/orb quandali : https://www.tradingview.com/chart/unrxeX2f/
//
*https://www.cftc.gov/MarketReports/CommitmentsofTraders/index.htm
//
* cl1
*brentoil
*oilcrude
*wti
*ukoil

//
*** 3 optyions from bazinga website
//
*volutility 
*ery/ery
*clean energy
*dollar
*options
*sir
*rigs
*eia
* https://www.quandl.com/search?filters=%5B%22Energy%22%5D
//

//snp, ndq, etf, vix, vxx
// strategy more than 10y

// backets(ann ai)
// order: wait till if-else, on both securities.

// *** 5 buy/sell orders, according to more insights. also in selling (20% each trade)
// monday to thursday. friday till 16:15
******* ATR between erx, ery
***** stop-loss order (trailing stop-loss to protect profits), take profit (ai) // in script "beta_etc"

** check every hour, that all happend in the hour frame. 
*** from 13:00 to end trade day
// https://kodify.net/tradingview/risks/maximum-position-size/
// buy , drop: 5 transactions each
//
performance, erorr
https://kodify.net/tradingview-programming-articles/#risk-management
//


// https://kodify.net/tradingview-programming-articles/#errors , alerts, riswk management, account trade no loop

// , OTT (pre strategy), z score, bollinger: long term
*** all swift conditions, must be on the same week 
//
Assignment: ← or :=    Example: c ← 2πr, c := 2πr 

Sums, products: Σ Π    Example: h ←    Σa∈A    1/a

//

algorithm ford-fulkerson is
    input: Graph G with flow capacity c, 
           source node s, 
           sink node t
    output: Flow f such that f is maximal from s to t

    (Note that f(u,v) is the flow from node u to node v, and c(u,v) is the flow capacity from node u to node v)

    for each edge (u, v) in GE do
        f(u, v) ← 0
        f(v, u) ← 0

    while there exists a path p from s to t in the residual network Gf do
        let cf be the flow capacity of the residual network Gf
        cf(p) ← min{cf(u, v) | (u, v) in p}
        for each edge (u, v) in p do
            f(u, v) ←  f(u, v) + cf(p)
            f(v, u) ← −f(u, v)

    return f
//

//

// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © allanster

//@version=4
strategy(title = "How To Set Time Ranges", shorttitle = "Timed", overlay = true, precision = 8, max_bars_back = 200, pyramiding = 0, initial_capital = 100000, 
     currency = currency.NONE, default_qty_type = strategy.cash, default_qty_value = 100000, commission_type = "percent", commission_value = 0.27)

// Revision: 1
// Author:   @allanster
// Credit:   Special thanks to @LucF and @a.tesla2018 for help with including ':1234567' for time ranges on weekends        

// === INPUT MA LENGTHS ===
fastMA     = input(defval = 14,      title = "FastMA Length",   type = input.integer, minval = 1, step = 1)
slowMA     = input(defval = 28,      title = "SlowMA Length",   type = input.integer, minval = 1, step = 1)

// === INPUT DATE RANGE ===
fromMonth  = input(defval = 1,       title = "From Month",      type = input.integer, minval = 1, maxval = 12)
fromDay    = input(defval = 1,       title = "From Day",        type = input.integer, minval = 1, maxval = 31)
fromYear   = input(defval = 2020,    title = "From Year",       type = input.integer, minval = 1970)
thruMonth  = input(defval = 1,       title = "Thru Month",      type = input.integer, minval = 1, maxval = 12)
thruDay    = input(defval = 1,       title = "Thru Day",        type = input.integer, minval = 1, maxval = 31)
thruYear   = input(defval = 2112,    title = "Thru Year",       type = input.integer, minval = 1970)

// === INPUT TIME RANGE ===
entryTime  = input('0000-0000',      title = "Entry Time",      type = input.session)  // '0000-0000' is anytime to enter
exitTime   = input('0000-0000',      title = "Exit Time",       type = input.session)  // '0000-0000' is anytime to exit

// === INPUT SHOW PLOTS ===
showDate   = input(true,             title = "Show Date Range", type = input.bool)
showTimeE  = input(true,             title = "Show Time Entry", type = input.bool)
showTimeX  = input(true,             title = "Show Time Exit",  type = input.bool)

// === DATE & TIME RANGE FUNCTIONS ===
isDate() =>                                                      // create function "within window of dates"
    start  = timestamp(fromYear, fromMonth, fromDay, 00, 00)     // date start
    finish = timestamp(thruYear, thruMonth, thruDay, 23, 59)     // date finish
    isDate = time >= start and time <= finish                    // current date is "within window of dates"

isTime(_position) =>                                             // create function "within window of time"
    range  = time(timeframe.period, _position + ':1234567')      // current time is "within window of time"

// === LOGIC ===
enterLong  = crossover (sma(close, fastMA), sma(close, slowMA))  // enter when fastMA crosses over slowMA
exitLong   = crossunder(sma(close, fastMA), sma(close, slowMA))  // exit when fastMA crosses under slowMA

// === EXECUTION ===
strategy.entry("L", strategy.long, when = isDate() and isTime(entryTime) and enterLong)  // enter "within window of dates and time" AND crossover
strategy.close("L", when = isDate() and isTime(exitTime) and exitLong)                   // exit "within window of dates and time" AND crossunder         

// === PLOTTING ===
bgcolor(color = showDate and isDate() ? color.gray : na,                          transp = 90)  // plot "within window of dates"
bgcolor(color = showTimeE and isDate() and isTime(entryTime) ? color.lime : na,   transp = 90)  // plot "within window of entry time"
bgcolor(color = showTimeX and isDate() and isTime(exitTime)  ? color.purple : na, transp = 90)  // plot "within window of exit time"

plot(sma(close, fastMA), title = 'FastMA', color = color.yellow, linewidth = 2, style = plot.style_line, transp = 0)  // plot FastMA
plot(sma(close, slowMA), title = 'SlowMA', color = color.aqua,   linewidth = 2, style = plot.style_line, transp = 0)  // plot SlowMA

//



BEGIN
NUMBER a, b, c, d, x1, x2
INPUT a,b,c
d = b^2-4ac
IF (d >= 0) THEN
      x1 = (-b+√d)/2a yada x1 = (-b+d^(1/2)/2a
      x2 = (-b-√d)/2a yada x2 = (-b-d^(1/2)/2a
      OUTPUT "ROOT 1:"+x1
      OUTPUT "ROOT 2:"+x2
 ELSE IF (d == 0) THEN 
      x1=x2= -b/2a
      OUTPUT "ROOT 1:"+x1
      OUTPUT "ROOT 2:"+x2
ELSE
    OUTPUT "There is no real root"
ENDIF 
END





BEGIN
NUMBER a, b, c, d, x1, x2
INPUT a,b,c
d = b^2-4ac
IF (d >= 0) THEN
      x1 = (-b+√d)/2a yada x1 = (-b+d^(1/2)/2a
      x2 = (-b-√d)/2a yada x2 = (-b-d^(1/2)/2a
      OUTPUT "ROOT 1:"+x1
      OUTPUT "ROOT 2:"+x2
 ELSE IF (d == 0) THEN 
      x1=x2= -b/2a
      OUTPUT "ROOT 1:"+x1
      OUTPUT "ROOT 2:"+x2
ELSE
    OUTPUT "There is no real root"
ENDIF 
END



///

// function to check if attribute/cond is in its valid time/date


FUNCTION linearSearch(list, searchTerm):
    FOR index FROM 0 -> length(list):
        IF list[index] == searchTerm THEN
            RETURN index
        ENDIF
    ENDLOOP
           RETURN -1
END FUNCTION 


//


part1       long        attributeLongArray1        validation      comment
part2       long        attributeLongArray2        validation      comment
part3       long        attributeLongArray3        validation      comment
part4       long        attributeLongArray4        validation      comment
part5       long        attributeLongArray5        validation      comment
part6       long        attributeLongArray6        validation      comment
part7       long        attributeLongArray7        validation      comment



part8       short        attributeShortArray8        validation      comment
part9       short        attributeShortArray9        validation      comment
part10      short        attributeShortArray10       validation      comment
part11      short        attributeShortArray11       validation      comment
part12      short        attributeShortArray12       validation      comment
part13      short        attributeShortArray13       validation      comment
part14      short        attributeShortArray14       validation      comment

/////

*** לציין היכן הסטטוס, כלןמר האם ב +1 או -1 לדוגמא
ניתן על ידיי רנקינג